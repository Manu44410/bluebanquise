---
name: Test generic deployment
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  generic_deployment_ubuntu_2004:
    name: Deploy Ubuntu 20.04 generic node
    runs-on: ubuntu-20.04
    env:
      ANSIBLE_CONFIG: /etc/bluebanquise/ansible.cfg
      PY_COLORS: '1'
      ANSIBLE_FORCE_COLOR: '1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python environment
        uses: actions/setup-python@v1

      - name: Install packages
        run: pip3 install ansible netaddr clustershell

      - name: Install community.general
        run: ansible-galaxy collection install community.general

      - name: Prepare bluebanquise folder
        run: sudo mkdir /etc/bluebanquise; sudo chown -R $(id -u):$(id -g) /etc/bluebanquise; cp -a * /etc/bluebanquise;

      - name: Prepare bluebanquise environment
        run: cp -a /etc/bluebanquise/resources/examples/automatic_tests_cluster/inventory /etc/bluebanquise; cp -a /etc/bluebanquise/resources/examples/automatic_tests_cluster/playbooks /etc/bluebanquise

      - name: Role test - modprobe
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t modprobe --diff

      - name: Prepare needed files and folders
        run: dd if=/dev/zero of=/tmp/1g.img bs=1 count=0 seek=1G; sudo mkdir -p /opt/software; sudo mkdir -p /opt/software_client; sudo useradd test-user;

      - name: Role test - nic
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t nic --diff

      - name: Show network conf
        run: ip a

      - name: Role test - set_hostname
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t set_hostname --diff

      - name: Role test - hosts_file
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t hosts_file --diff

      - name: Role test - repositories_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t repositories_server --diff

      - name: Role test - repositories_client
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t repositories_client --diff

      - name: Role test - bluebanquise
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t bluebanquise --diff

      - name: Role test - ssh_client
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t ssh_client --diff

      - name: Role test - dhcp_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t dhcp_server --diff 
# -e "{start_services: False}"'

      - name: Role test - dns_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t dns_server --diff

      - name: Role test - dns_client
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t dns_client --check --diff

      - name: Role test - time
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t time --diff

      - name: Role test - pxe_stack
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t pxe_stack --diff

      - name: Role test - nfs_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t nfs_server --diff

      - name: Role test - nfs_client
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t nfs_client --diff

      - name: Role test - audit_system
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t audit_system --diff

      - name: Role test - clustershell
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t clustershell --diff

      - name: Role test - conman
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t conman --diff

      - name: Role test - firewall
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t firewall_role --diff

      - name: Role test - kernel_config
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t kernel_config --diff

      - name: Role test - log_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t log_server --diff

      - name: Role test - log_client
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t log_client --diff

      - name: Role test - pam_limits
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t pam_limits --diff

      - name: Role test - powerman
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t powerman --diff

      - name: Role test - root_password
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t root_password --diff

      - name: Role test - ssh_remote_keys
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t ssh_remote_keys --diff

      - name: Role test - sudoers
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t sudoers --diff

      - name: Role test - parted
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t parted --diff

      - name: Ensure partitions are available
        run: sudo losetup --partscan --show --find /tmp/1g.img; lsblk;

      - name: Role test - lvm
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t lvm --diff

      - name: Role test - filesystem
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t filesystem --diff

      - name: Role test - mount
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --become --connection=local --limit management1 -t mount --diff

  generic_deployment_rockylinux_8:
    name: Deploy RockyLinux 8 generic node
    runs-on: ubuntu-20.04
    env:
      ANSIBLE_CONFIG: /etc/bluebanquise/ansible.cfg
      PY_COLORS: '1'
      ANSIBLE_FORCE_COLOR: '1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create rockylinux systemd able image
        run: docker build -t rockylinux/rockylinux:8_systemd -f ./resources/docker/Dockerfile_RockyLinux_8_systemd .

      - name: Prepare bluebanquise folder
        run: sudo mkdir /etc/bluebanquise; sudo chown -R $(id -u):$(id -g) /etc/bluebanquise; cp -a * /etc/bluebanquise;

      - name: Prepare bluebanquise environment
        run: cp -a /etc/bluebanquise/resources/examples/automatic_tests_cluster/inventory /etc/bluebanquise; cp -a /etc/bluebanquise/resources/examples/automatic_tests_cluster/playbooks /etc/bluebanquise

      - name: Start container
        run: docker run -d --net=host --name management1 -v /etc/bluebanquise/:/etc/bluebanquise/ -v /sys/fs/cgroup:/sys/fs/cgroup:ro rockylinux/rockylinux:8_systemd

      - name: List containers
        run: docker ps -a

      - name: Install packages
        run: pip3 install ansible netaddr clustershell

      - name: Install community.general
        run: ansible-galaxy collection install community.general

      - name: Role test - dhcp_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --connection=docker --limit management1 -t dhcp_server --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false start_services=false" -u root 

      - name: Role test - dns_server
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --connection=docker --limit management1 -t dns_server --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false start_services=false" -u root 

      - name: Role test - time
        run: ansible-playbook /etc/bluebanquise/playbooks/managements.yml --connection=docker --limit management1 -t time --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false start_services=false" -u root 

